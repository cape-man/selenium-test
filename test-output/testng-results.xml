<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="187" started-at="2017-08-18T13:36:09Z" finished-at="2017-08-18T13:36:09Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="187" started-at="2017-08-18T13:36:09Z" finished-at="2017-08-18T13:36:09Z">
      <class name="com.dotnetscripts.DisplayContactPage">
        <test-method status="SKIP" signature="testDisplayContactPage()[pri:0, instance:com.dotnetscripts.DisplayContactPage@6a38e57f]" name="testDisplayContactPage" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayContactPage -->
      </class> <!-- com.dotnetscripts.DisplayContactPage -->
      <class name="com.dotnetscripts.DisplayLoginPage">
        <test-method status="PASS" signature="openExcel()[pri:0, instance:com.dotnetscripts.DisplayLoginPage@3caeaf62]" name="openExcel" is-config="true" duration-ms="125" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openExcel -->
        <test-method status="FAIL" signature="preCondition()[pri:0, instance:com.dotnetscripts.DisplayLoginPage@3caeaf62]" name="preCondition" is-config="true" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\CAPE\selenium-test\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\CAPE\selenium-test\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$0(ChromeDriverService.java:1)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:138)
	at com.canvashomepage.scripts.BaseTest.preCondition(BaseTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:143)
	at org.testng.TestRunner.beforeRun(TestRunner.java:624)
	at org.testng.TestRunner.run(TestRunner.java:592)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at com.dotnetscripts.CallTestNG.main(CallTestNG.java:17)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="SKIP" signature="testDisplayLoginPage()[pri:0, instance:com.dotnetscripts.DisplayLoginPage@3caeaf62]" name="testDisplayLoginPage" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayLoginPage -->
        <test-method status="SKIP" signature="postCondition()[pri:0, instance:com.dotnetscripts.DisplayLoginPage@3caeaf62]" name="postCondition" is-config="true" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method status="SKIP" signature="closeExcel()[pri:0, instance:com.dotnetscripts.DisplayLoginPage@3caeaf62]" name="closeExcel" is-config="true" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeExcel -->
      </class> <!-- com.dotnetscripts.DisplayLoginPage -->
      <class name="com.dotnetscripts.DisplayRegisterPage">
        <test-method status="SKIP" signature="testDisplayRegisterPage()[pri:0, instance:com.dotnetscripts.DisplayRegisterPage@e6ea0c6]" name="testDisplayRegisterPage" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayRegisterPage -->
      </class> <!-- com.dotnetscripts.DisplayRegisterPage -->
      <class name="com.dotnetscripts.DisplayAboutPage">
        <test-method status="SKIP" signature="testDisplayAboutPage()[pri:0, instance:com.dotnetscripts.DisplayAboutPage@5577140b]" name="testDisplayAboutPage" duration-ms="0" started-at="2017-08-18T19:06:09Z" finished-at="2017-08-18T19:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayAboutPage -->
      </class> <!-- com.dotnetscripts.DisplayAboutPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
